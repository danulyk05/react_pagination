{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","useState","pages","setPages","pagesCount","Math","ceil","isFirstPage","isLastPage","useEffect","updatedPages","i","push","page","className","classNames","disabled","href","onClick","map","active","nextPage","item","from","to","numbers","n","getNumbers","App","setPerPage","setCurrentPage","itemsSize","length","calcItems","useMemo","startItem","endItem","min","visibleItem","slice","id","defaultValue","onChange","event","Number","currentTarget","value","htmlFor","handleCurrentPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1726e038.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\n\ntype Props = {\n  items: string[],\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const [pages, setPages] = useState<number[]>([]);\n\n  const pagesCount = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pagesCount;\n\n  useEffect(() => {\n    const updatedPages: number[] = [];\n\n    for (let i = 1; i <= pagesCount; i += 1) {\n      updatedPages.push(i);\n    }\n\n    setPages(updatedPages);\n  }, [pagesCount]);\n\n  const prevPage = (page: number) => () => {\n    if (page > 0 && page !== 1) {\n      onPageChange(page - 1);\n    }\n  };\n\n  const nextPage = (page: number) => () => {\n    if (page < pagesCount && page !== pagesCount) {\n      onPageChange(page + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: isFirstPage },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={prevPage(currentPage)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: isLastPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={nextPage(currentPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsSize = items.length;\n\n  const calcItems = useMemo(() => {\n    const startItem = perPage * currentPage - perPage;\n    const endItem = Math.min(startItem + perPage, itemsSize);\n    const visibleItem = items.slice(startItem, endItem);\n\n    return { startItem, endItem, visibleItem };\n  }, [perPage, currentPage, items]);\n\n  const perPageHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.currentTarget.value));\n    setCurrentPage(1);\n  };\n\n  const handleCurrentPage = (page: number) => {\n    if (page !== currentPage) {\n      setCurrentPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} `\n          + `(items ${calcItems.startItem + 1} - ${calcItems.endItem}`\n          + ` of ${itemsSize})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={perPageHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={calcItems.visibleItem}\n        total={itemsSize}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          handleCurrentPage(page);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}